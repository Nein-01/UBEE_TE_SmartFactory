//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ATEVersions_Management.FoxconnSMTP {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService", ConfigurationName="FoxconnSMTP.SmtpServiceSoap")]
    public interface SmtpServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmtpService/SmtpService/GeterrMsg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GeterrMsg();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmtpService/SmtpService/GeterrMsg", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GeterrMsgAsync();
        
        // CODEGEN: Generating message contract since message SendMailRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmtpService/SmtpService/SendMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ATEVersions_Management.FoxconnSMTP.SendMailResponse SendMail(ATEVersions_Management.FoxconnSMTP.SendMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmtpService/SmtpService/SendMail", ReplyAction="*")]
        System.Threading.Tasks.Task<ATEVersions_Management.FoxconnSMTP.SendMailResponse> SendMailAsync(ATEVersions_Management.FoxconnSMTP.SendMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmtpService/SmtpService/WMSendMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool WMSendMail(string mailto, string from, string cc, string subject, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmtpService/SmtpService/WMSendMail", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> WMSendMailAsync(string mailto, string from, string cc, string subject, string msg);
        
        // CODEGEN: Generating message contract since message SaveAttachmentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmtpService/SmtpService/SaveAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ATEVersions_Management.FoxconnSMTP.SaveAttachmentResponse SaveAttachment(ATEVersions_Management.FoxconnSMTP.SaveAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmtpService/SmtpService/SaveAttachment", ReplyAction="*")]
        System.Threading.Tasks.Task<ATEVersions_Management.FoxconnSMTP.SaveAttachmentResponse> SaveAttachmentAsync(ATEVersions_Management.FoxconnSMTP.SaveAttachmentRequest request);
        
        // CODEGEN: Generating message contract since message CleanAttachRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmtpService/SmtpService/CleanAttach", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ATEVersions_Management.FoxconnSMTP.CleanAttachResponse CleanAttach(ATEVersions_Management.FoxconnSMTP.CleanAttachRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmtpService/SmtpService/CleanAttach", ReplyAction="*")]
        System.Threading.Tasks.Task<ATEVersions_Management.FoxconnSMTP.CleanAttachResponse> CleanAttachAsync(ATEVersions_Management.FoxconnSMTP.CleanAttachRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
    public partial class ContainsKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string containsKey1Field;
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ContainsKey", Order=0)]
        public string ContainsKey1 {
            get {
                return this.containsKey1Field;
            }
            set {
                this.containsKey1Field = value;
                this.RaisePropertyChanged("ContainsKey1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
    public partial class MailStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string mailtoField;
        
        private string ccField;
        
        private string bccField;
        
        private string fromField;
        
        private string subjectField;
        
        private string bodyField;
        
        private MailFormat formatField;
        
        private MailPriority priorityField;
        
        private MailEncoding encodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string mailto {
            get {
                return this.mailtoField;
            }
            set {
                this.mailtoField = value;
                this.RaisePropertyChanged("mailto");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string cc {
            get {
                return this.ccField;
            }
            set {
                this.ccField = value;
                this.RaisePropertyChanged("cc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string bcc {
            get {
                return this.bccField;
            }
            set {
                this.bccField = value;
                this.RaisePropertyChanged("bcc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string from {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("from");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
                this.RaisePropertyChanged("subject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
                this.RaisePropertyChanged("body");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public MailFormat format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
                this.RaisePropertyChanged("format");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public MailPriority priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public MailEncoding encode {
            get {
                return this.encodeField;
            }
            set {
                this.encodeField = value;
                this.RaisePropertyChanged("encode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
    public enum MailFormat {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Html,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
    public enum MailPriority {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Low,
        
        /// <remarks/>
        High,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
    public enum MailEncoding {
        
        /// <remarks/>
        UUEncode,
        
        /// <remarks/>
        Base64,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMail", WrapperNamespace="http://tempuri.org/SmtpService/SmtpService", IsWrapped=true)]
    public partial class SendMailRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
        public ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService", Order=0)]
        public ATEVersions_Management.FoxconnSMTP.MailStruct obj;
        
        public SendMailRequest() {
        }
        
        public SendMailRequest(ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey, ATEVersions_Management.FoxconnSMTP.MailStruct obj) {
            this.ContainsKey = ContainsKey;
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailResponse", WrapperNamespace="http://tempuri.org/SmtpService/SmtpService", IsWrapped=true)]
    public partial class SendMailResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
        public ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService", Order=0)]
        public bool SendMailResult;
        
        public SendMailResponse() {
        }
        
        public SendMailResponse(ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey, bool SendMailResult) {
            this.ContainsKey = ContainsKey;
            this.SendMailResult = SendMailResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveAttachment", WrapperNamespace="http://tempuri.org/SmtpService/SmtpService", IsWrapped=true)]
    public partial class SaveAttachmentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
        public ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService", Order=0)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Buffer;
        
        public SaveAttachmentRequest() {
        }
        
        public SaveAttachmentRequest(ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey, string name, byte[] Buffer) {
            this.ContainsKey = ContainsKey;
            this.name = name;
            this.Buffer = Buffer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveAttachmentResponse", WrapperNamespace="http://tempuri.org/SmtpService/SmtpService", IsWrapped=true)]
    public partial class SaveAttachmentResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
        public ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService", Order=0)]
        public bool SaveAttachmentResult;
        
        public SaveAttachmentResponse() {
        }
        
        public SaveAttachmentResponse(ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey, bool SaveAttachmentResult) {
            this.ContainsKey = ContainsKey;
            this.SaveAttachmentResult = SaveAttachmentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CleanAttach", WrapperNamespace="http://tempuri.org/SmtpService/SmtpService", IsWrapped=true)]
    public partial class CleanAttachRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
        public ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey;
        
        public CleanAttachRequest() {
        }
        
        public CleanAttachRequest(ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey) {
            this.ContainsKey = ContainsKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CleanAttachResponse", WrapperNamespace="http://tempuri.org/SmtpService/SmtpService", IsWrapped=true)]
    public partial class CleanAttachResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService")]
        public ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/SmtpService/SmtpService", Order=0)]
        public bool CleanAttachResult;
        
        public CleanAttachResponse() {
        }
        
        public CleanAttachResponse(ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey, bool CleanAttachResult) {
            this.ContainsKey = ContainsKey;
            this.CleanAttachResult = CleanAttachResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SmtpServiceSoapChannel : ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmtpServiceSoapClient : System.ServiceModel.ClientBase<ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap>, ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap {
        
        public SmtpServiceSoapClient() {
        }
        
        public SmtpServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmtpServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmtpServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmtpServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GeterrMsg() {
            return base.Channel.GeterrMsg();
        }
        
        public System.Threading.Tasks.Task<string> GeterrMsgAsync() {
            return base.Channel.GeterrMsgAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ATEVersions_Management.FoxconnSMTP.SendMailResponse ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap.SendMail(ATEVersions_Management.FoxconnSMTP.SendMailRequest request) {
            return base.Channel.SendMail(request);
        }
        
        public bool SendMail(ref ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey, ATEVersions_Management.FoxconnSMTP.MailStruct obj) {
            ATEVersions_Management.FoxconnSMTP.SendMailRequest inValue = new ATEVersions_Management.FoxconnSMTP.SendMailRequest();
            inValue.ContainsKey = ContainsKey;
            inValue.obj = obj;
            ATEVersions_Management.FoxconnSMTP.SendMailResponse retVal = ((ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap)(this)).SendMail(inValue);
            ContainsKey = retVal.ContainsKey;
            return retVal.SendMailResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ATEVersions_Management.FoxconnSMTP.SendMailResponse> ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap.SendMailAsync(ATEVersions_Management.FoxconnSMTP.SendMailRequest request) {
            return base.Channel.SendMailAsync(request);
        }
        
        public System.Threading.Tasks.Task<ATEVersions_Management.FoxconnSMTP.SendMailResponse> SendMailAsync(ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey, ATEVersions_Management.FoxconnSMTP.MailStruct obj) {
            ATEVersions_Management.FoxconnSMTP.SendMailRequest inValue = new ATEVersions_Management.FoxconnSMTP.SendMailRequest();
            inValue.ContainsKey = ContainsKey;
            inValue.obj = obj;
            return ((ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap)(this)).SendMailAsync(inValue);
        }
        
        public bool WMSendMail(string mailto, string from, string cc, string subject, string msg) {
            return base.Channel.WMSendMail(mailto, from, cc, subject, msg);
        }
        
        public System.Threading.Tasks.Task<bool> WMSendMailAsync(string mailto, string from, string cc, string subject, string msg) {
            return base.Channel.WMSendMailAsync(mailto, from, cc, subject, msg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ATEVersions_Management.FoxconnSMTP.SaveAttachmentResponse ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap.SaveAttachment(ATEVersions_Management.FoxconnSMTP.SaveAttachmentRequest request) {
            return base.Channel.SaveAttachment(request);
        }
        
        public bool SaveAttachment(ref ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey, string name, byte[] Buffer) {
            ATEVersions_Management.FoxconnSMTP.SaveAttachmentRequest inValue = new ATEVersions_Management.FoxconnSMTP.SaveAttachmentRequest();
            inValue.ContainsKey = ContainsKey;
            inValue.name = name;
            inValue.Buffer = Buffer;
            ATEVersions_Management.FoxconnSMTP.SaveAttachmentResponse retVal = ((ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap)(this)).SaveAttachment(inValue);
            ContainsKey = retVal.ContainsKey;
            return retVal.SaveAttachmentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ATEVersions_Management.FoxconnSMTP.SaveAttachmentResponse> ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap.SaveAttachmentAsync(ATEVersions_Management.FoxconnSMTP.SaveAttachmentRequest request) {
            return base.Channel.SaveAttachmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<ATEVersions_Management.FoxconnSMTP.SaveAttachmentResponse> SaveAttachmentAsync(ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey, string name, byte[] Buffer) {
            ATEVersions_Management.FoxconnSMTP.SaveAttachmentRequest inValue = new ATEVersions_Management.FoxconnSMTP.SaveAttachmentRequest();
            inValue.ContainsKey = ContainsKey;
            inValue.name = name;
            inValue.Buffer = Buffer;
            return ((ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap)(this)).SaveAttachmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ATEVersions_Management.FoxconnSMTP.CleanAttachResponse ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap.CleanAttach(ATEVersions_Management.FoxconnSMTP.CleanAttachRequest request) {
            return base.Channel.CleanAttach(request);
        }
        
        public bool CleanAttach(ref ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey) {
            ATEVersions_Management.FoxconnSMTP.CleanAttachRequest inValue = new ATEVersions_Management.FoxconnSMTP.CleanAttachRequest();
            inValue.ContainsKey = ContainsKey;
            ATEVersions_Management.FoxconnSMTP.CleanAttachResponse retVal = ((ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap)(this)).CleanAttach(inValue);
            ContainsKey = retVal.ContainsKey;
            return retVal.CleanAttachResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ATEVersions_Management.FoxconnSMTP.CleanAttachResponse> ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap.CleanAttachAsync(ATEVersions_Management.FoxconnSMTP.CleanAttachRequest request) {
            return base.Channel.CleanAttachAsync(request);
        }
        
        public System.Threading.Tasks.Task<ATEVersions_Management.FoxconnSMTP.CleanAttachResponse> CleanAttachAsync(ATEVersions_Management.FoxconnSMTP.ContainsKey ContainsKey) {
            ATEVersions_Management.FoxconnSMTP.CleanAttachRequest inValue = new ATEVersions_Management.FoxconnSMTP.CleanAttachRequest();
            inValue.ContainsKey = ContainsKey;
            return ((ATEVersions_Management.FoxconnSMTP.SmtpServiceSoap)(this)).CleanAttachAsync(inValue);
        }
    }
}
