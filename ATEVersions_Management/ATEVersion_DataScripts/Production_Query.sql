-- ========= CPK Table =========

SELECT * FROM Production.INFORMATION_SCHEMA.ROUTINES
WHERE ROUTINE_TYPE LIKE 'PROCEDURE'
GO -- ======
ALTER PROCEDURE proFATPSetCPKResult_TEST(
	@atePC nvarchar(50),
	@model nvarchar(50),
	@cpkResult nvarchar(max),
	@cpkLowestItem nvarchar(500)
)
AS
BEGIN
	--
	DECLARE @RATE FLOAT
	BEGIN TRY
	SELECT @RATE = CAST((FAIL_NUM * 1.0 / (FAIL_NUM + PASS_NUM)) * 100 AS DECIMAL(10,2)) FROM FATP_TABLE WHERE ATE_PC = @atePC AND MODEL = @model
	END TRY
	BEGIN CATCH
	SET @RATE = 0
	END CATCH

	DECLARE @DATE NVARCHAR(50) 
	SET @DATE = CONCAT(YEAR(GETDATE()), '/', MONTH(GETDATE()), '/',DAY(GETDATE()),' ',DATEPART(HOUR,GETDATE()),':',DATEPART(MINUTE,GETDATE()),':',DATEPART(SECOND,GETDATE()))
	--
	-- SET @cpkLowestItem = CONCAT(@cpkLowestItem, ',',@DATE, ',', @RATE)
	-- SET @cpkResult = CONCAT(@DATE, '\n', @RATE, '\n', @cpkLowestItem)
	--
	UPDATE FATP_TABLE SET CPK_RESULTS = @cpkResult, CPK_LOWEST_ITEM = @cpkLowestItem
	WHERE ATE_PC = @atePC AND MODEL = @model
END
GO -- ======
SELECT * FROM FATP_CPK_DATA

SELECT CAST((FAIL_NUM*1.0/(FAIL_NUM+PASS_NUM)) * 100 AS FLOAT) AS 'RATE'
FROM FATP_TABLE
WHERE ATE_PC = 'L01C153RC021' AND MODEL = 'U10C153.08' AND POST_DATE >= '2024-11-21 00:00:00' 

SELECT TOP 1  CPK_LOWEST_ITEM, CAST((FAIL_NUM*1.0/(FAIL_NUM+PASS_NUM)) * 100 AS DECIMAL(10,2)) AS 'RATE' 
FROM FATP_TABLE
WHERE ATE_PC = 'L01C153RC021' AND MODEL = 'U10C153.08' AND POST_DATE >= '2024-11-19 00:00:00' 

SELECT MODEL_NAME FROM CPK_TABLE 
GROUP BY MODEL_NAME 

SELECT ID, MODEL_NAME, PCB_SN, STATION_NAME, DATE_TIME, CONTENT FROM CPK_TABLE
WHERE STATUS LIKE 'PASS' AND MODEL_NAME LIKE '%UBH%' AND STATION_NAME LIKE '%%' AND CONTENT LIKE '%%' -- AND PCB_SN LIKE 'Y0Q06V4' 
ORDER BY DATE_TIME DESC

SELECT COUNT(ID) FROM CPK_TABLE
WHERE STATUS = 'PASS' AND MODEL_NAME LIKE 'U10C153.08' AND STATION_NAME LIKE 'FT' AND ATE_PC LIKE 'L01C153FT001' 
					  AND DATE_TIME >= '2024-11-17 07:00:00' AND DATE_TIME <= '2024-11-18 07:00:00' 

SELECT MODEL_NAME, COUNT(ID) FROM CPK_TABLE
WHERE STATUS LIKE 'FAIL' AND DATE_TIME >= '2024-05-24'
GROUP BY MODEL_NAME
ORDER BY MODEL_NAME
-- 
SELECT MODEL_NAME, COUNT(*) AS PCS_NUM FROM CPK_TABLE
WHERE DATE_TIME >= '2024-06-02 07:30:00' AND DATE_TIME <= '2024-06-03 07:30:00'
GROUP BY MODEL_NAME
ORDER BY MODEL_NAME

SELECT DISTINCT MODEL_NAME FROM CPK_TABLE
EXCEPT
SELECT MODEL_NAME FROM CPK_TABLE
WHERE DATE_TIME >= '2024-06-02 07:30:00' AND DATE_TIME <= '2024-06-03 07:30:00'
GROUP BY MODEL_NAME
ORDER BY MODEL_NAME

SELECT * FROM CPK_TABLE 
WHERE MODEL_NAME = 'U10H175.30' AND STATION_NAME = 'FT' AND DATE_TIME >= '2024-01-28 07:30:00' AND STATUS = 'PASS' AND
CONTENT NOT LIKE '%"name": [ "WIFI 2.4G TX", "WIFI 2.4G RX", "WIFI_2.4G_LinkRate", "WIFI_2.4G_Rssi_Ant1", "WIFI_2.4G_Rssi_Ant2", "WIFI 5G TX", "WIFI 5G RX", "WIFI_5G_LinkRate", "WIFI_5G_Rssi_Ant1", "WIFI_5G_Rssi_Ant2", "WIFI_5G_Rssi_Ant3", "WIFI_5G_Rssi_Ant4" ],%'

SELECT TOP 100 * FROM CPK_TABLE
WHERE MODEL_NAME LIKE '%%' AND STATION_NAME LIKE '%%' AND ATE_PC LIKE '%%' AND PCB_SN LIKE '%%' -- AND DATE_TIME ='%%'
ORDER BY DATE_TIME DESC

SELECT COUNT(ID) FROM CPK_TABLE
WHERE MODEL_NAME LIKE '%180.01%' AND STATION_NAME LIKE '%PT1%' AND DATE_TIME >='2024-06-10 07:30:00' AND DATE_TIME <='2024-06-11 07:30:00' -- AND ATE_PC LIKE '%%' AND PCB_SN LIKE '%%'
ORDER BY DATE_TIME DESC

SELECT TOP 1 * FROM CPK_TABLE
WHERE STATUS LIKE '%PASS%' AND CONTENT != '[(null)]' AND LEN(PCB_SN) > 0 AND MODEL_NAME LIKE '%181%' AND STATION_NAME LIKE '%PT1%'
ORDER BY DATE_TIME DESC

SELECT TOP 10 * FROM CPK_TABLE WHERE STATUS LIKE 'PASS' AND CONTENT != '[(null)]' AND LEN(PCB_SN) > 0 AND MODEL_NAME LIKE 'U10C181.00' AND STATION_NAME LIKE 'PT1' 
ORDER BY DATE_TIME DESC

SELECT TOP 100 * FROM CPK_TABLE 
WHERE STATUS LIKE '%PASS%' AND CONTENT != '[(null)]' AND LEN(PCB_SN) > 0 AND MODEL_NAME LIKE '%180.01%' AND STATION_NAME LIKE '%FT%' AND DATE_TIME >= '2024-01-28 07:30:00' AND DATE_TIME <='2024-01-28 07:30:00'
ORDER BY NEWID()

SELECT ID, MODEL_NAME, STATION_NAME, PCB_SN, DATE_TIME, CONTENT FROM CPK_TABLE
WHERE DATEDIFF(DAY,DATE_TIME,GETDATE()) > 90
ORDER BY DATE_TIME DESC

DECLARE @testVar int
SELECT @testVar =  COUNT(ID) FROM CPK_TABLE
WHERE DATEDIFF(DAY,DATE_TIME,GETDATE()) > 90
PRINT N'Number of record from 3 months apart: '
PRINT @testVar

SELECT COUNT(ID) FROM CPK_TABLE
WHERE DATEDIFF(DAY,DATE_TIME,GETDATE()) > 90

SELECT * FROM CPK_TABLE
WHERE PCB_SN = 'YZM0Q2B'

-- ========= Test Time Equip Estimate =========

GO -- === TE_TEST_DATA ===

DECLARE @nowTime datetime = GETDATE()
DECLARE @fromDay DATETIME = CAST(CONCAT(YEAR(@nowTime),'-',MONTH(@nowTime),'-',DAY(@nowTime)-1,' 07:30:00') AS DATETIME)
DECLARE @toDay DATETIME = CAST(CONCAT(YEAR(@nowTime),'-',MONTH(@nowTime),'-',DAY(@nowTime),' 07:30:00') AS DATETIME)

SELECT * FROM TE_TEST_DATA
WHERE STATUS = 1 AND MODEL LIKE '%%' AND STATION LIKE 'PT' AND ATE LIKE 'L05C172PT004' AND END_TIME >= @fromDay AND END_TIME <= @toDay
ORDER BY START_TIME ASC

SELECT * FROM TE_TEST_DATA WHERE TEST_VERSION LIKE '%.76%'
UPDATE TE_TEST_DATA SET MODEL = 'U10C153.01' WHERE ID = 8724998

SET IDENTITY_INSERT [dbo].[TE_TEST_DATA] OFF
INSERT INTO [dbo].[TE_TEST_DATA] ([VIRTUAL_SN], [WORK_DATE], [WORK_SECTION], [FULL_WORK_DATE], [CFT], [PROJECT], [MODEL], [LINE], [STATION], [ATE], [FIXTURE_CODE], [CARRIER_CODE], [TEST_MODE], [TEST_VERSION], [MO], [BOARD_SN], [SN], [START_TIME], [END_TIME], [ELAPSE_TIME], [STATUS], [ERROR_CODE], [TEST_ITEM], [VALUE_TYPE], [VALUE], [LSL], [USL]) 
VALUES ( N'202310210838468230', N'20231021', 9, N'2023102109', N'UBEE', N'CABLEMODEM', N'95.1883T00', N'L01', N'RC', N'L01C153RC002', N'(null)', N'', 1, N'V2.5.6', N'2639012321', N'YZ209LT', N'', N'2024-03-27 07:36:50', N'2024-03-27 07:36:50', 109, 1, N'(null)', N'(null)', N'(null)', N'(null)', N'(null)', N'(null)')

SELECT * FROM [TE_TEST_DATA]
WHERE MODEL LIKE '%U10C142.10%' AND TEST_VERSION LIKE '%%' AND STATION LIKE '%FT%'

DELETE FROM TE_TEST_DATA WHERE MODEL LIKE '%95.1883T00%' AND TEST_VERSION LIKE '%%'

GO --
SELECT TOP 1000 * FROM TE_TEST_DATA
WHERE BOARD_SN LIKE 'Y0R1XML' AND STATION LIKE 'PT1' -- MODEL LIKE 'U10C147.10' AND TEST_VERSION LIKE '%%'
ORDER BY END_TIME DESC

SELECT TOP 1000 * FROM TE_TEST_DATA
WHERE BOARD_SN LIKE '%%' AND STATION LIKE 'FT' AND MODEL LIKE 'U10C153.80' AND ATE LIKE 'L01C153FT001' -- AND TEST_VERSION LIKE '%%'
ORDER BY END_TIME DESC

SELECT COUNT(ID) FROM TE_TEST_DATA
WHERE MODEL = 'U10C180.01' AND STATION = 'FT' AND END_TIME >= '2024-01-28 07:30:00' AND END_TIME <= '2024-01-29 07:30:00' AND STATUS = 1

SELECT COUNT(ID) FROM TE_TEST_DATA
WHERE MODEL = 'U10C180.00' AND STATION = 'RC1' AND END_TIME >= '2024-01-21 07:30:00' AND END_TIME <= '2024-01-22 07:30:00' AND STATUS = 1

SELECT * FROM TE_TEST_DATA
WHERE MODEL LIKE '%U10C181.00%' AND TEST_VERSION LIKE '%22%'

DELETE FROM TE_TEST_DATA WHERE MODEL LIKE '%U10C181.00%' AND TEST_VERSION LIKE '%22%'

SELECT TOP 1000 * FROM TE_TEST_DATA
WHERE STATUS = 1 AND MODEL = 'U10G178.30' AND YEAR(END_TIME) >= 2000 AND YEAR(START_TIME) >= 2000 AND END_TIME >= '2023-12-11' AND END_TIME <= '2023-12-12'
ORDER BY END_TIME DESC

SELECT LINE, MODEL, STATION, COUNT(ID) FROM TE_TEST_DATA
WHERE STATUS = 1 AND YEAR(END_TIME) >= 2000 AND YEAR(START_TIME) >= 2000 AND END_TIME >= '2023-12-14 07:30:00' AND END_TIME <= '2023-12-15 07:30:00'
GROUP BY LINE, MODEL, STATION
ORDER BY LINE, MODEL, STATION

-- ========= ATE Time =========
-- Group By Station
SELECT LINE, ATE, COUNT(ID) AS PCS, SUM(ELAPSE_TIME) AS TOTAL_TIME FROM TE_TEST_DATA
WHERE STATUS = 1 AND LINE = 'L04' AND ATE = 'L04C180FT009' AND STATION = 'FT' AND END_TIME >= '2024-01-27 07:30:00' AND END_TIME <= '2024-01-29 07:30:00'
GROUP BY LINE, ATE
ORDER BY LINE, ATE

SELECT * FROM TE_TEST_DATA
WHERE STATUS = 1 AND LINE = 'L04' AND ATE = 'L04C180FT006' AND STATION = 'FT' AND END_TIME >= '2024-01-24 07:30:00' AND END_TIME <= '2024-01-25 11:30:00'
ORDER BY END_TIME DESC

SELECT MODEL FROM TE_TEST_DATA
WHERE STATUS = 1 AND MODEL NOT LIKE 'Model' 
GROUP BY MODEL

GO

SELECT TOP 100 * FROM TE_TEST_DATA
ORDER BY ID ASC 
SELECT TOP 100 * FROM CPK_TABLE
SELECT COUNT(ID) FROM FATP_TABLE

GO

SELECT STATION, ATE, COUNT(ID) AS PCS, SUM(ELAPSE_TIME) AS TOTAL_TIME FROM TE_TEST_DATA
WHERE STATUS = 1  AND END_TIME >= '2023-12-17 07:30:00' AND END_TIME <= '2023-12-18 07:30:00'
GROUP BY STATION, ATE
ORDER BY STATION, ATE

SELECT MODEL, STATION, ATE, COUNT(ID) AS PCS, AVG(ELAPSE_TIME) AS UNIT_TIME, MIN(ELAPSE_TIME) AS MIN_TIME, MAX(ELAPSE_TIME) AS MAX_TIME FROM TE_TEST_DATA
WHERE STATUS = 1  AND MODEL = 'UBN2305.13'  AND END_TIME >= '2023-12-19' AND END_TIME <= GETDATE()
GROUP BY MODEL, STATION, ATE
ORDER BY MODEL, STATION, ATE

-- U10G178.30 | UBN2305.13
SELECT MODEL, STATION, COUNT(DISTINCT ATE) AS ATE_NUMBER FROM TE_TEST_DATA
WHERE STATUS = 1   AND END_TIME >= '2023-12-20 13:30:00' AND END_TIME <= GETDATE()
GROUP BY MODEL, STATION
ORDER BY MODEL, STATION

-- Group By ATE And Date

SELECT * FROM TE_TEST_DATA
WHERE STATUS = 1   AND MODEL LIKE '%180%' AND END_TIME >= '2024-02-10 07:30:00' AND END_TIME <= '2024-02-16 07:30:00' AND BOARD_SN = 'YZI139G'

SELECT MODEL, STATION, WORK_DATE, ATE, COUNT(ID) AS PCS, AVG(ELAPSE_TIME) AS MEAN_TIME, MIN(ELAPSE_TIME) AS MIN_TIME, MAX(ELAPSE_TIME) AS MAX_TIME  FROM TE_TEST_DATA
WHERE STATUS = 1 AND MODEL LIKE '%U10G178.30%' AND STATION LIKE '%WT%' AND ATE LIKE '%L10G178FT001%' AND END_TIME >= '2024-04-06 07:30:00' AND END_TIME <= '2024-04-13 07:30:00'
GROUP BY MODEL, STATION, ATE, WORK_DATE
ORDER BY MODEL, STATION, ATE, WORK_DATE

SELECT MODEL, STATION, ATE, COUNT(ID) AS PCS, AVG(ELAPSE_TIME) AS UNIT_TIME, MIN(ELAPSE_TIME) AS MIN_TIME, MAX(ELAPSE_TIME) AS MAX_TIME  FROM TE_TEST_DATA
WHERE STATUS = 1  AND MODEL = 'UBN2305.13' AND STATION ='FT'  AND END_TIME >= '2023-12-16 07:30:00' AND END_TIME <= '2023-12-22 07:30:00'
GROUP BY MODEL, STATION, ATE
ORDER BY MODEL, STATION, ATE

-- DELETE
DELETE FROM TE_TEST_DATA 
WHERE STATUS = 1  AND MODEL = 'UBN2305.13'  AND END_TIME >= '2023-12-16 07:30:00' AND END_TIME <= '2023-12-22 07:30:00' AND ELAPSE_TIME = 0

-- CPK
SELECT TOP 1000 * FROM CPK_TABLE
WHERE STATUS = 'PASS' AND MODEL_NAME = 'U10G178.30' AND STATION_NAME = 'NF' AND CONTENT NOT LIKE '%--%'
ORDER BY DATE_TIME DESC

SELECT COUNT(ID) FROM CPK_TABLE

SELECT TOP 1000 * FROM CPK_TABLE
WHERE MODEL_NAME LIKE 'U10C147.10' 
ORDER BY DATE_TIME DESC

-- Get latest version
SELECT MODEL, TEST_VERSION FROM TE_TEST_DATA
WHERE MODEL != 'Model' AND MODEL LIKE '%175.00%' AND TEST_VERSION LIKE '%%' AND LEN(TEST_VERSION) > 0
GROUP BY MODEL, TEST_VERSION
ORDER BY MODEL DESC, CONVERT(FLOAT, SUBSTRING(TEST_VERSION,4,LEN(TEST_VERSION))) DESC

SELECT MODEL AS MODELNAME , TEST_VERSION AS VersionOnline FROM TE_TEST_DATA WHERE MODEL != 'Model' AND MODEL LIKE '%%' AND TEST_VERSION LIKE '%%' AND LEN(TEST_VERSION) > 0 GROUP BY MODEL, TEST_VERSION ORDER BY MODEL DESC, CONVERT(FLOAT, SUBSTRING(TEST_VERSION,4,LEN(TEST_VERSION))) DESC

DECLARE @tblModel TABLE(idx int identity(1,1), model nvarchar(50))
INSERT INTO @tblModel SELECT MODEL FROM funcModelVersionOnline() -- ORDER BY MODEL DESC, CONVERT(FLOAT, SUBSTRING(TEST_VERSION,4,LEN(TEST_VERSION))) DESC
SELECT * FROM @tblModel

GO -- TEST THINGS
ALTER FUNCTION funcModelVersionOnline()
RETURNS TABLE
AS
	RETURN 
	SELECT MODEL , TEST_VERSION FROM TE_TEST_DATA 
	WHERE MODEL != 'Model' AND LEN(TEST_VERSION) > 0 
	GROUP BY MODEL, TEST_VERSION 
	-- ORDER BY MODEL DESC, CONVERT(FLOAT, SUBSTRING(TEST_VERSION,4,LEN(TEST_VERSION))) DESC
GO
SELECT * FROM funcModelVersionOnline()
GO
SELECT TOP 1 TEST_VERSION FROM TE_TEST_DATA
WHERE STATUS = 1 AND MODEL != 'Model' AND TEST_VERSION != '' AND SN != '' AND BOARD_SN != '' AND YEAR(END_TIME) >= 2000 AND YEAR(START_TIME) >= 2000 AND MODEL = 'UBN2305.13'
ORDER BY END_TIME DESC

SELECT TOP 100 * FROM TE_TEST_DATA
WHERE MODEL LIKE '%153.10%' AND TEST_VERSION LIKE '%%'
ORDER BY END_TIME DESC

DELETE FROM TE_TEST_DATA WHERE MODEL = 'U10H175.40' AND TEST_VERSION = 'V1.7'

GO
-- ========= FATP_TABLE Monitor =========
CREATE TABLE FATP_TABLE(
	ID INT IDENTITY(1,1) NOT NULL,
	ATE_PC NVARCHAR(50) NULL,
	ATE_IP NVARCHAR(50) NULL,
	ATE_MAC NVARCHAR(50) NULL,
	LINE NVARCHAR(50) NULL,
	STATION NVARCHAR(50) NULL,
	MODEL NVARCHAR(50) NULL,
	POST_DATE DATETIME NULL,
	PASS_NUM INT NULL,
	FAIL_NUM INT NULL,
	ERROR_LIST NVARCHAR(MAX) NULL,
	COUNTERS NVARCHAR(MAX) NULL,
	EQUIPMENTS NVARCHAR(MAX) NULL,
)
GO
ALTER TABLE FATP_TABLE 
ADD CPK_LOWEST_ITEM NVARCHAR(500) NULL,
	PC_DATE DATETIME NULL,
	CPK_RESULTS NVARCHAR(MAX) NULL,
	LOSS_MEASUREMENT NVARCHAR(MAX) NULL
GO

ALTER TABLE FATP_TABLE 
ADD OP_ID NVARCHAR(8) NULL,
	OP_RECORD NVARCHAR(MAX) NULL

ALTER TABLE FATP_TABLE DROP COLUMN OP_ID, OP_RECORD
GO
-- ====== Triggers, Procedures And Functions ======
GO -- === Trigger Instead Insert ===
ALTER TRIGGER dbo.trgFATPInsteadInsert -- ALTER | CREATE | DROP
ON dbo.FATP_TABLE
INSTEAD OF INSERT 
AS
BEGIN
-- DECLARE INDENTIFIER
	DECLARE @fatpID int;
	DECLARE @atePC nvarchar(50);
	DECLARE @ateIP nvarchar(50);
	DECLARE @ateMAC nvarchar(50); 
	SELECT @fatpID = i.ID from inserted i; 
	SELECT @atePC = i.ATE_PC from inserted i; 
	SELECT @ateIP = i.ATE_IP from inserted i; 
	SELECT @ateMAC = i.ATE_MAC from inserted i;	
-- DECLARE UPDATER
	DECLARE @line nvarchar(50);
	DECLARE @station nvarchar(50);
	DECLARE @model nvarchar(50);
	DECLARE @postDate datetime;
	DECLARE @passNum int;
	DECLARE @failNum int;
	DECLARE @errorList nvarchar(max);
	DECLARE @counters nvarchar(max);
	DECLARE @equipments nvarchar(max);
	SELECT @line = i.LINE from inserted i;
	SELECT @station = i.STATION from inserted i;
	SELECT @model = i.MODEL from inserted i;	
	SELECT @postDate = i.POST_DATE from inserted i;	
	SELECT @passNum = i.PASS_NUM from inserted i;
	SELECT @failNum = i.FAIL_NUM from inserted i;
	SELECT @errorList = i.ERROR_LIST from inserted i;	
	SELECT @counters = i.COUNTERS from inserted i;	
	SELECT @equipments = i.EQUIPMENTS from inserted i;	
-- TRIGGER ACTION
	IF EXISTS (SELECT ID FROM FATP_TABLE WHERE ATE_PC = @atePC AND ATE_IP = @ateIP AND ATE_MAC = @ateMAC)
		BEGIN
			UPDATE dbo.FATP_TABLE 
			SET LINE = @line, STATION = @station, MODEL = @model, POST_DATE = GETDATE(), PASS_NUM = @passNum, FAIL_NUM = @failNum, FAIL_NUM_BUFFER = @failNum,
			ERROR_LIST = @errorList, COUNTERS = @counters, EQUIPMENTS = @equipments, PC_DATE = @postDate 
			WHERE ATE_PC = @atePC AND ATE_IP = @ateIP AND ATE_MAC = @ateMAC
		END
	ELSE
		BEGIN
			SET IDENTITY_INSERT dbo.FATP_TABLE OFF
			INSERT INTO dbo.FATP_TABLE(ATE_PC, ATE_IP, ATE_MAC, LINE, STATION, MODEL, POST_DATE, PASS_NUM, FAIL_NUM, ERROR_LIST, COUNTERS, EQUIPMENTS, PC_DATE)
			VALUES(@atePC, @ateIP, @ateMAC, @line, @station, @model, GETDATE(), @passNum, @failNum, @errorList, @counters, @equipments, @postDate)
		END	
END

--
GO
INSERT INTO FATP_TABLE(ATE_PC,ATE_IP,ATE_MAC,LINE,STATION,MODEL,POST_DATE,PASS_NUM,FAIL_NUM,ERROR_LIST,COUNTERS,EQUIPMENTS) VALUES ('V0932583-TE','10.220.42.117','B4-2E-99-6C-A3-65','V09','PT1','Model','2024-01-19 19:22:06',0,0,'(null)','[{"CounterNo": 0,"CounterName": "PON Cable","CounterNum": 0},{"CounterNo": 1,"CounterName": "RF Cable","CounterNum": 0},{"CounterNo": 2,"CounterName": "ANT Cable","CounterNum": 12},{"CounterNo": 3,"CounterName": "POWER Cable","CounterNum": 0},{"CounterNo": 4,"CounterName": "USB Cable","CounterNum": 0},{"CounterNo": 5,"CounterName": "Ethernet Cable","CounterNum": 0},{"CounterNo": 6,"CounterName": "Voice Cable","CounterNum": 16},{"CounterNo": 7,"CounterName": "Console Cable","CounterNum": 17},{"CounterNo": 8,"CounterName": "PIN Count","CounterNum": 0}]','[{"EquipNo": 0,"EquipName": "IQ_DEVICE","EquipSN": "L04C180FT001"}]')
INSERT INTO FATP_TABLE(ATE_PC,ATE_IP,ATE_MAC,LINE,STATION,MODEL,POST_DATE,PASS_NUM,FAIL_NUM,ERROR_LIST,COUNTERS,EQUIPMENTS) VALUES ('V0932583-TE','10.220.42.118','B4-2E-99-6C-A3-65','V09','PT1','Model','2024-01-19 19:58:14',0,5,'(null)','[{"CounterNo": 0,"CounterName": "PON Cable","CounterNum": 0},{"CounterNo": 1,"CounterName": "RF Cable","CounterNum": 0},{"CounterNo": 2,"CounterName": "ANT Cable","CounterNum": 12},{"CounterNo": 3,"CounterName": "POWER Cable","CounterNum": 0},{"CounterNo": 4,"CounterName": "USB Cable","CounterNum": 0},{"CounterNo": 5,"CounterName": "Ethernet Cable","CounterNum": 0},{"CounterNo": 6,"CounterName": "Voice Cable","CounterNum": 16},{"CounterNo": 7,"CounterName": "Console Cable","CounterNum": 17},{"CounterNo": 8,"CounterName": "PIN Count","CounterNum": 0}]','[{"EquipNo": 0,"EquipName": "IQ_DEVICE","EquipSN": "L04C180FT002"}]')

GO -- ====== Procedure Set CPK Result By MODEL And ATE_PC ======
CREATE PROCEDURE proFATPSetCPKResult(
	@atePC nvarchar(50),
	@model nvarchar(50),
	@cpkResult nvarchar(max),
	@cpkLowestItem nvarchar(500)
)
AS
BEGIN
	UPDATE FATP_TABLE SET CPK_RESULTS = @cpkResult, CPK_LOWEST_ITEM = @cpkLowestItem
	WHERE ATE_PC = @atePC AND MODEL = @model
END
GO
EXEC proFATPSetCPKResult @ATEPC = @atePC, @MODEL = @model, @CPKRESULT = @cpkResult, @CPKLOWESTITEM = @cpkLowest
GO -- ====== Procedure Get Count ATE_PC and MODEL ======
-- CREATE | ALTER | DROP
ALTER PROCEDURE proFATPAbnormalCheckStatus(
	@atePC nvarchar(50),
	@ateIP nvarchar(50),
	@model nvarchar(50),
	@station nvarchar(50),
	@pcDate datetime
)
AS
BEGIN
	-- Local variables
	DECLARE @currentDate datetime 
	SELECT @currentDate = DATEADD(DD,0,DATEDIFF(DD,0,GETDATE()))
	DECLARE @line nvarchar(50)
	SELECT @line = SUBSTRING(@atePC,0,4)
	PRINT CONCAT('Line of FATP: ',@line)	
	-- Check duplicate ATE_PC and MODEL 
	DECLARE @isPCDuplicate int = 0
	SELECT @isPCDuplicate = COUNT(ATE_PC) FROM FATP_TABLE WHERE ATE_PC LIKE @atePC AND MODEL LIKE @model AND POST_DATE >= @currentDate AND DATEDIFF(MINUTE, POST_DATE, GETDATE()) < 5
	
	--IF EXISTS (SELECT ID FROM FATP_TABLE WHERE ATE_PC LIKE @atePC AND MODEL LIKE @model AND DATEDIFF(MINUTE, POST_DATE, GETDATE()) < 30)
		--BEGIN
		--IF NOT EXISTS (SELECT ID FROM FATP_TABLE WHERE ATE_PC LIKE @atePC AND MODEL LIKE @model AND ATE_IP LIKE @ateIP)
			--SET @isPCDuplicate = 1;
		--END

	-- Check time on server and on line of FATP is in sync
	DECLARE @isTimeInSync int = 0
	DECLARE @timeRange int
	SELECT @timeRange = DATEDIFF(MINUTE,@pcDate,GETDATE())
	PRINT CONCAT('Time range of FATP: ',@timeRange)	
	IF(@timeRange > 60 OR @timeRange < -60)
		BEGIN
			SET @isTimeInSync = 1
		END

	-- Check ATE_PC is in order
	DECLARE @isPCInOrder int = 0
	DECLARE @stationModelPCNum int
	SELECT @stationModelPCNum = COUNT (DISTINCT ATE_PC) FROM FATP_TABLE WHERE LINE = @line AND MODEL = @model AND STATION = @station
	DECLARE @currentPCPos int = CAST(SUBSTRING(@atepc,LEN(@atepc)-1,2) AS INT)
	DECLARE @previousPC nvarchar(50) = CONCAT(SUBSTRING(@atepc,0,LEN(@atepc)-1), CAST( SUBSTRING(@atepc,LEN(@atepc)-1,2) AS INT) - 1)
	DECLARE @followingPC nvarchar(50) = CONCAT(SUBSTRING(@atepc,0,LEN(@atepc)-1), CAST( SUBSTRING(@atepc,LEN(@atepc)-1,2) AS INT) + 1)
	IF(@currentPCPos >= 0 AND @currentPCPos < 10)
		BEGIN
			SET @previousPC = CONCAT(SUBSTRING(@atepc,0,LEN(@atepc)-1), '0',CAST(SUBSTRING(@atepc,LEN(@atepc)-1,2) AS INT) - 1)
			SET @followingPC = CONCAT(SUBSTRING(@atepc,0,LEN(@atepc)-1), '0',CAST(SUBSTRING(@atepc,LEN(@atepc)-1,2) AS INT) + 1)
		END
	IF(@currentPCPos <= 0)
		BEGIN
			SET @isPCInOrder = 1
		END
	IF(@stationModelPCNum = 0 AND @currentPCPos != 1)
		BEGIN
			SET @isPCInOrder = 1
		END
	IF(@stationModelPCNum > 0 AND @stationModelPCNum <= @currentPCPos)
		BEGIN
			IF NOT EXISTS (SELECT ATE_PC FROM FATP_TABLE WHERE ATE_PC LIKE @previousPC AND MODEL = @model)
			SET @isPCInOrder = 1
		END
	IF(@stationModelPCNum > 0 AND @stationModelPCNum > @currentPCPos AND @currentPCPos != 1)
		BEGIN
			IF NOT EXISTS (SELECT ATE_PC FROM FATP_TABLE WHERE ATE_PC LIKE @previousPC AND MODEL = @model) OR
			   NOT EXISTS (SELECT ATE_PC FROM FATP_TABLE WHERE ATE_PC LIKE @followingPC AND MODEL = @model)
			SET @isPCInOrder = 1
		END

	-- To be added...

	-- Set all status to result table
	DECLARE @TableStatus TABLE(IS_DUPLICATE INT, IS_INORDER INT, IS_TIMESYNC INT)
	INSERT INTO @TableStatus VALUES(@isPCDuplicate, @isPCInOrder, @isTimeInSync)
	SELECT * FROM @TableStatus	
END
GO
EXEC proFATPAbnormalCheckStatus @atePC = 'L06C181PT202', @ateIP = '200.166.45.56', @model = 'U10C181.00', @station='PT2'
GO -- ====== Procedure Get Count ATE_PC and MODEL ======
CREATE PROCEDURE proFATPGetCPKResult(
	@atePC nvarchar(50),
	@model nvarchar(50),
	@fullOrlowest bit
)
AS
BEGIN
	-- Local variables
	DECLARE @currentDate datetime 
	SELECT @currentDate = DATEADD(DD,0,DATEDIFF(DD,0,GETDATE()))
	-- Procedure Action 
	IF(@fullOrlowest = 1)
		BEGIN
			SELECT TOP 1 CPK_LOWEST_ITEM FROM FATP_TABLE WHERE ATE_PC = @atePC AND MODEL = @model AND POST_DATE >= @currentDate 
		END
	ELSE
		BEGIN
			SELECT TOP 1 CPK_RESULTS FROM FATP_TABLE WHERE ATE_PC = @atePC AND MODEL = @model AND POST_DATE >= @currentDate
		END
END
EXEC proFATPGetCPKResult @atePC = 'L06C181RC103', @model = 'U10C181.00',@fullOrlowest = 1
-- ========= TEST QUERIES =========
GO
SELECT OP_ID, OP_RECORD FROM FATP_TABLE WHERE MODEL LIKE '%147%' AND STATION LIKE '%RC%'

SELECT ERROR_LIST FROM FATP_TABLE 
WHERE ATE_PC LIKE 'L10G178WT001' AND ATE_IP LIKE '200.166.42.126' AND MODEL LIKE 'U10G178.30'

SELECT SUBSTRING('L06C181FT005',0,4)

SELECT CONCAT(SUBSTRING(ATE_PC,0,LEN(ATE_PC)-1), '0',CAST( SUBSTRING(ATE_PC,LEN(ATE_PC)-1,2) AS INT) - 1)
FROM FATP_TABLE
WHERE  ATE_PC LIKE '%L10G178WT002' AND MODEL LIKE '%178%'

SELECT CONCAT( SUBSTRING(ATE_PC,0,LEN(ATE_PC)-1), CAST( SUBSTRING(ATE_PC,LEN(ATE_PC)-1,2) AS INT) + 1) FROM FATP_TABLE
WHERE  ATE_PC LIKE '%L01C153FT031' AND MODEL LIKE '%153%'

SELECT ATE_PC, ATE_IP, STATION, MODEL, POST_DATE, DATEDIFF(MINUTE,POST_DATE,GETDATE()) AS TIMERANGE FROM FATP_TABLE
WHERE DATEDIFF(MINUTE,POST_DATE,GETDATE()) < 60
ORDER BY POST_DATE

SELECT DISTINCT ATE_PC, POST_DATE, COUNTERS, CPK_RESULTS FROM FATP_TABLE
WHERE ATE_PC LIKE '%L05%' AND MODEL LIKE '%%' --AND STATION LIKE '%FT%' -- AND ATE_IP LIKE '%%'
ORDER BY POST_DATE DESC

UPDATE FATP_TABLE SET ATE_PC = 'L04C180FT011' WHERE ID = 61 -- 55 | ATE_PC LIKE '%L04%' AND MODEL LIKE '%180%' AND STATION LIKE '%WT%' AND POST_DATE = GETDATE() | L04C180FT011

SELECT ATE_PC, LINE, STATION, MODEL, POST_DATE, PASS_NUM, FAIL_NUM, FAIL_NUM_BUFFER FROM FATP_TABLE 
WHERE ATE_PC LIKE 'L02H175FT201' AND ATE_IP LIKE '200.166.42.106' AND MODEL LIKE 'U10H175.00'

UPDATE FATP_TABLE SET FAIL_NUM_BUFFER = 0 WHERE ATE_PC LIKE '' AND ATE_IP LIKE '' AND MODEL LIKE ''

SELECT ATE_PC, LINE, STATION, MODEL, POST_DATE, PASS_NUM, CPK_RESULTS FROM FATP_TABLE
WHERE ATE_PC LIKE '%L04C180WT007%' AND MODEL LIKE '%%' -- ATE_IP LIKE '%(null)%' OR ATE_PC LIKE '%(null)%' OR ATE_MAC LIKE '%(null)%'
ORDER BY POST_DATE DESC

DELETE FROM FATP_TABLE WHERE ATE_IP LIKE '%(null)%' OR ATE_PC LIKE '%(null)%' OR ATE_MAC LIKE '%(null)%'

SELECT COUNT(ATE_PC) FROM FATP_TABLE
WHERE ATE_PC LIKE '%L02H175UK010%' AND POST_DATE >= DATEADD(DD,0,DATEDIFF(DD,0,GETDATE())) AND DATEDIFF(MINUTE,POST_DATE,GETDATE()) < 60

SELECT * FROM FATP_TABLE
WHERE ATE_PC LIKE '%%' AND MODEL LIKE '%172%' AND STATION LIKE '%%'
ORDER BY STATION

SELECT COUNT(ATE_PC) AS PC_NUM FROM FATP_TABLE
WHERE MODEL LIKE '%181%' AND STATION LIKE '%FT%' AND POST_DATE >= DATEADD(DD,0,DATEDIFF(DD,0,GETDATE())) AND LINE LIKE '%L06%'

SELECT STATION, COUNT(ATE_PC) AS ActivePCNum FROM FATP_TABLE
WHERE LINE LIKE '%L10%' AND POST_DATE >= DATEADD(DD,0,DATEDIFF(DD,0,GETDATE())) AND DATEDIFF(MINUTE, POST_DATE, GETDATE()) < 30
GROUP BY STATION 


GO -- COPY_IC | CREATE DROP
CREATE TABLE COPYIC_TABLE(	
	MODEL NVARCHAR(50) NOT NULL,
	[LOCATION] NVARCHAR(50) NOT NULL,
	[VERSION] NVARCHAR(50) NOT NULL,
	FILE_CHECKSUM NVARCHAR(32) NOT NULL,
	BIN_CHECKSUM NVARCHAR(10) NOT NULL,
	IC_TYPE NVARCHAR(10) NOT NULL,
	MATERIAL_NO NVARCHAR(50) NOT NULL,
	MACHINE_TYPE NVARCHAR(50) NOT NULL,
	IN_STAGE NVARCHAR(100) NULL,
	CONSTRAINT PK_COPYIC_TABLE PRIMARY KEY(MODEL,[LOCATION],[VERSION],MATERIAL_NO,MACHINE_TYPE)
)
GO
INSERT INTO COPYIC_TABLE(MODEL,LOCATION,VERSION,FILE_CHECKSUM,BIN_CHECKSUM,MATERIAL_NO) VALUES('','','','','','')
DELETE FROM COPYIC_TABLE WHERE MODEL LIKE ''
UPDATE COPYIC_TABLE SET MODEL = '',
						LOCATION = ''


SELECT model, LEN(BIN_CHECKSUM) FROM COPYIC_TABLE WHERE MODEL LIKE ''
GO

SELECT * FROM COPYIC_TABLE WHERE MODEL LIKE 'U10C153T08' AND MACHINE_TYPE LIKE '%F%'

INSERT INTO COPYIC_TABLE(MODEL, LOCATION, VERSION, FILE_CHECKSUM, BIN_CHECKSUM, IC_TYPE, MATERIAL_NO, MACHINE_TYPE, MO, DOT_COLOR1, DOT_COLOR2, DOT_COLOR3) 
VALUES(N'')

UPDATE COPYIC_TABLE SET DOT_COLOR1 = 'ORANGE', DOT_COLOR2 = 'ORANGE' WHERE MODEL LIKE '%153T08%'

GO

GO --
SELECT * FROM PROGRAM WHERE ModelName LIKE '%1714%'
SELECT * FROM PROGRAM P INNER JOIN VERSION V ON P.ProgramID = V.ProgramID
 WHERE ModelName LIKE '%1714%'
